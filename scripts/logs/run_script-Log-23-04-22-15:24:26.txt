Sat Apr 22 15:24:26 2023: Starting simulation at run_script-Log-23-04-22-15:24:26.Log is also stored in output file at ./logs/run_script-Log-23-04-22-15:24:26.txtMQ2008
Sat Apr 22 15:24:26 2023: Read   0: Fold 1 of dataset MQ2008.
Sat Apr 22 15:24:26 2023: No group information is provided.
Sat Apr 22 15:24:26 2023: FILEOUT ./output/MQ2008/algo/PAIRRANK/info/1000/10/0.1-0.99999977-gd-0.1-0.1-False-random-False-1.out
Sat Apr 22 15:24:26 2023: Launch 0: algo/PAIRRANK/info/1000/10/0.1-0.99999977-gd-0.1-0.1-False-random-False-1 0 with click model informational on fold 1 from dataset MQ2008.
Sat Apr 22 15:24:26 2023: setting up ranker...
Sat Apr 22 15:24:26 2023: ranker set up complete
Sat Apr 22 15:24:26 2023: loop through impressions: 1000
Sat Apr 22 15:24:31 2023: Process Process-1:
Sat Apr 22 15:24:31 2023: Traceback (most recent call last):
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
Sat Apr 22 15:24:31 2023:     self.run()
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
Sat Apr 22 15:24:31 2023:     self._target(*self._args, **self._kwargs)
Sat Apr 22 15:24:31 2023:   File "../utils/datasimulation.py", line 124, in start_run
Sat Apr 22 15:24:31 2023:     simulation.run(ranker, output_key=output_key)
Sat Apr 22 15:24:31 2023:   File "../utils/singlesimulation.py", line 116, in run
Sat Apr 22 15:24:31 2023:     ranking_i, train_ranking = self.sample_and_rank(ranker)
Sat Apr 22 15:24:31 2023:   File "../utils/singlesimulation.py", line 97, in sample_and_rank
Sat Apr 22 15:24:31 2023:     train_ranking = ranker.get_train_query_ranking(ranking_i)
Sat Apr 22 15:24:31 2023:   File "../algorithms/basiconlineranker.py", line 98, in get_train_query_ranking
Sat Apr 22 15:24:31 2023:     self._last_ranking = self._create_train_ranking(query_id, query_feat, inverted)[:self.n_results]
Sat Apr 22 15:24:31 2023:   File "../algorithms/PairRank/PairRank.py", line 211, in _create_train_ranking
Sat Apr 22 15:24:31 2023:     partition, sorted_list, certain_edges = self.get_partitions(lcb_matrix)
Sat Apr 22 15:24:31 2023:   File "../algorithms/PairRank/PairRank.py", line 103, in get_partitions
Sat Apr 22 15:24:31 2023:     uncertainG = nx.complete_graph(n_nodes)
Sat Apr 22 15:24:31 2023:   File "/home/matthew/DBDG/OnlineLearningToRank/env/lib/python3.7/site-packages/networkx/utils/decorators.py", line 795, in func
Sat Apr 22 15:24:31 2023:     return argmap._lazy_compile(__wrapper)(*args, **kwargs)
Sat Apr 22 15:24:31 2023:   File "<class 'networkx.utils.decorators.argmap'> compilation 4", line 4, in argmap_complete_graph_1
Sat Apr 22 15:24:31 2023:     from pathlib import Path
Sat Apr 22 15:24:31 2023:   File "/home/matthew/DBDG/OnlineLearningToRank/env/lib/python3.7/site-packages/networkx/generators/classic.py", line 261, in complete_graph
Sat Apr 22 15:24:31 2023:     G.add_edges_from(edges)
Sat Apr 22 15:24:31 2023:   File "/home/matthew/DBDG/OnlineLearningToRank/env/lib/python3.7/site-packages/networkx/classes/graph.py", line 942, in add_edges_from
Sat Apr 22 15:24:31 2023:     if u not in self._node:
Sat Apr 22 15:24:31 2023: KeyboardInterrupt
Sat Apr 22 15:24:31 2023: Traceback (most recent call last):
Sat Apr 22 15:24:31 2023:   File "run_script.py", line 118, in <module>
Sat Apr 22 15:24:31 2023:     set_sim_and_run(input_args)
Sat Apr 22 15:24:31 2023:   File "run_script.py", line 110, in set_sim_and_run
Sat Apr 22 15:24:31 2023:     return switcher.get(algo, lambda: "ERROR: algorithm type not valid")()
Sat Apr 22 15:24:31 2023:   File "run_script.py", line 105, in <lambda>
Sat Apr 22 15:24:31 2023:     switcher = {"PAIRRANK":         lambda: func_pairrank(args, dir_name),
Sat Apr 22 15:24:31 2023:   File "run_script.py", line 27, in func_pairrank
Sat Apr 22 15:24:31 2023:     sim.run(ranker)
Sat Apr 22 15:24:31 2023:   File "../utils/datasimulation.py", line 62, in run
Sat Apr 22 15:24:31 2023:     self.wait_for_output()
Sat Apr 22 15:24:31 2023:   File "../utils/datasimulation.py", line 164, in wait_for_output
Sat Apr 22 15:24:31 2023:     output_key, run_output = self.output_queue.get(block=not found, timeout=timeout)
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/multiprocessing/queues.py", line 104, in get
Sat Apr 22 15:24:31 2023:     if not self._poll(timeout):
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/multiprocessing/connection.py", line 257, in poll
Sat Apr 22 15:24:31 2023:     return self._poll(timeout)
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/multiprocessing/connection.py", line 414, in _poll
Sat Apr 22 15:24:31 2023:     r = wait([self], timeout)
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/multiprocessing/connection.py", line 921, in wait
Sat Apr 22 15:24:31 2023:     ready = selector.select(timeout)
Sat Apr 22 15:24:31 2023:   File "/usr/lib/python3.7/selectors.py", line 415, in select
Sat Apr 22 15:24:31 2023:     fd_event_list = self._selector.poll(timeout)
Sat Apr 22 15:24:31 2023: KeyboardInterrupt
