Sat Apr 29 12:31:59 2023: Starting simulation at run_script-Log-23-04-29-12:31:59.Log is also stored in output file at ./logs/run_script-Log-23-04-29-12:31:59.txtMQ2008
Sat Apr 29 12:31:59 2023: Read   0: Fold 1 of dataset MQ2008.
Sat Apr 29 12:32:00 2023: No group information is provided.
Sat Apr 29 12:32:00 2023: collected!
Sat Apr 29 12:32:00 2023: collected!
Sat Apr 29 12:32:00 2023: Launch 0: algo/TDMGD/perfect/200/10/0.1-0.99999977-1 0 with click model perfect on fold 1 from dataset MQ2008.
Sat Apr 29 12:32:00 2023: collected!
Sat Apr 29 12:32:00 2023: Launch 1: algo/TDMGD/perfect/200/10/0.1-0.99999977-1 1 with click model perfect on fold 1 from dataset MQ2008.
Sat Apr 29 12:32:00 2023: (46, 10)
Sat Apr 29 12:32:00 2023: setting up ranker...
Sat Apr 29 12:32:00 2023: ranker set up complete
Sat Apr 29 12:32:00 2023: loop through impressions: 200
Sat Apr 29 12:32:00 2023: Process Process-2:
Sat Apr 29 12:32:00 2023: Traceback (most recent call last):
Sat Apr 29 12:32:00 2023:   File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
Sat Apr 29 12:32:00 2023:     self.run()
Sat Apr 29 12:32:00 2023:   File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
Sat Apr 29 12:32:00 2023:     self._target(*self._args, **self._kwargs)
Sat Apr 29 12:32:00 2023:   File "../utils/datasimulation.py", line 124, in start_run
Sat Apr 29 12:32:00 2023:     simulation.run(ranker, output_key=output_key)
Sat Apr 29 12:32:00 2023:   File "../utils/singlesimulation.py", line 116, in run
Sat Apr 29 12:32:00 2023:     ranking_i, train_ranking = self.sample_and_rank(ranker)
Sat Apr 29 12:32:00 2023:   File "../utils/singlesimulation.py", line 97, in sample_and_rank
Sat Apr 29 12:32:00 2023:     train_ranking = ranker.get_train_query_ranking(ranking_i)
Sat Apr 29 12:32:00 2023:   File "../algorithms/basiconlineranker.py", line 98, in get_train_query_ranking
Sat Apr 29 12:32:00 2023:     self._last_ranking = self._create_train_ranking(query_id, query_feat, inverted)[:self.n_results]
Sat Apr 29 12:32:00 2023:   File "../algorithms/DBGD/tddbgd.py", line 48, in _create_train_ranking
Sat Apr 29 12:32:00 2023:     scores = self.model.candidate_score(query_feat)
Sat Apr 29 12:32:00 2023:   File "../models/linearmodel.py", line 29, in candidate_score
Sat Apr 29 12:32:00 2023:     return np.dot(features, self.weights).T
Sat Apr 29 12:32:00 2023:   File "<__array_function__ internals>", line 6, in dot
Sat Apr 29 12:32:00 2023: KeyboardInterrupt
Sat Apr 29 12:32:00 2023: (46, 10)
Sat Apr 29 12:32:00 2023: setting up ranker...
Sat Apr 29 12:32:00 2023: ranker set up complete
Sat Apr 29 12:32:00 2023: loop through impressions: 200
Sat Apr 29 12:32:00 2023: Process Process-1:
Sat Apr 29 12:32:00 2023: Traceback (most recent call last):
Sat Apr 29 12:32:00 2023:   File "/usr/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
Sat Apr 29 12:32:00 2023:     self.run()
Sat Apr 29 12:32:00 2023:   File "/usr/lib/python3.7/multiprocessing/process.py", line 99, in run
Sat Apr 29 12:32:00 2023:     self._target(*self._args, **self._kwargs)
Sat Apr 29 12:32:00 2023:   File "../utils/datasimulation.py", line 124, in start_run
Sat Apr 29 12:32:00 2023:     simulation.run(ranker, output_key=output_key)
Sat Apr 29 12:32:00 2023:   File "../utils/singlesimulation.py", line 119, in run
Sat Apr 29 12:32:00 2023:     self.timestep_evaluate(run_results, impressions, ranker, ranking_i, train_ranking, ranking_labels)
Sat Apr 29 12:32:00 2023:   File "../utils/singlesimulation.py", line 47, in timestep_evaluate
Sat Apr 29 12:32:00 2023:     cur_results = self.evaluate_ranker(iteration, ranker, ranking_i, train_ranking, ranking_labels)
Sat Apr 29 12:32:00 2023:   File "../utils/singlesimulation.py", line 71, in evaluate_ranker
Sat Apr 29 12:32:00 2023:     inverted=True)
Sat Apr 29 12:32:00 2023:   File "../algorithms/DBGD/tddbgd.py", line 38, in get_test_rankings
Sat Apr 29 12:32:00 2023:     scores = self.model.score(features)
Sat Apr 29 12:32:00 2023:   File "../models/linearmodel.py", line 33, in score
Sat Apr 29 12:32:00 2023:     return np.dot(features, self.weights[:, 0:1])[:, 0]
Sat Apr 29 12:32:00 2023:   File "<__array_function__ internals>", line 6, in dot
Sat Apr 29 12:32:00 2023: KeyboardInterrupt
Sat Apr 29 12:32:00 2023: Traceback (most recent call last):
Sat Apr 29 12:32:00 2023:   File "run_script.py", line 173, in <module>
Sat Apr 29 12:32:00 2023:     set_sim_and_run(input_args)
Sat Apr 29 12:32:00 2023:   File "run_script.py", line 165, in set_sim_and_run
Sat Apr 29 12:32:00 2023:     return switcher.get(algo, lambda: "ERROR: algorithm type not valid")()
Sat Apr 29 12:32:00 2023:   File "run_script.py", line 164, in <lambda>
Sat Apr 29 12:32:00 2023:     'TDMGD': lambda: func_tdmgd(args, dir_name)}
Sat Apr 29 12:32:00 2023:   File "run_script.py", line 146, in func_tdmgd
Sat Apr 29 12:32:00 2023:     sim.run(ranker)
Sat Apr 29 12:32:00 2023:   File "../utils/datasimulation.py", line 61, in run
Sat Apr 29 12:32:00 2023:     while self.update_active() >= self.num_proc:
Sat Apr 29 12:32:00 2023:   File "../utils/datasimulation.py", line 152, in update_active
Sat Apr 29 12:32:00 2023:     gc.collect()
Sat Apr 29 12:32:00 2023: KeyboardInterrupt
